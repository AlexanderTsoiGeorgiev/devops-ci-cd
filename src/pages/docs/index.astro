---
import { getCollection, type CollectionEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';

const docs = await getCollection('docs');
const sortedDocs = docs.sort((a: CollectionEntry<'docs'>, b: CollectionEntry<'docs'>) => {
  const dateA = a.data.date?.getTime() || 0;
  const dateB = b.data.date?.getTime() || 0;
  return dateB - dateA;
});
---

<Layout title="–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è">
  <div class="docs-container">
    <div class="docs-header">
      <h1 class="docs-title">üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è</h1>
      <p class="docs-subtitle">–í—Å–∏—á–∫–∏ –Ω–∞–ª–∏—á–Ω–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏ –∑–∞ DevOps –∫—É—Ä—Å–∞</p>
    </div>
    
    <div class="docs-grid">
      {sortedDocs.map((doc: CollectionEntry<'docs'>) => (
        <a 
          href={`/docs/${doc.slug}`}
          class="doc-card"
        >
          <div class="card-content">
            <h2 class="card-title">{doc.data.title}</h2>
            {doc.data.description && (
              <p class="card-description">{doc.data.description}</p>
            )}
            <div class="card-meta">
              {doc.data.date && (
                <span class="meta-badge">üìÖ {doc.data.date.toLocaleDateString('bg-BG')}</span>
              )}
              {doc.data.author && (
                <span class="meta-badge">üë§ {doc.data.author}</span>
              )}
            </div>
            {doc.data.tags && doc.data.tags.length > 0 && (
              <div class="card-tags">
                {doc.data.tags.map((tag: string) => (
                  <span class="tag">{tag}</span>
                ))}
              </div>
            )}
          </div>
          <div class="card-arrow">‚Üí</div>
        </a>
      ))}
    </div>

    {sortedDocs.length === 0 && (
      <div class="empty-state">
        <p>–í—Å–µ –æ—â–µ –Ω—è–º–∞ —Å—ä–∑–¥–∞–¥–µ–Ω–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏.</p>
        <p class="empty-hint">–°—ä–∑–¥–∞–π—Ç–µ –Ω–æ–≤ .md —Ñ–∞–π–ª –≤ <code>src/content/docs/</code></p>
      </div>
    )}
  </div>
</Layout>

<style>
  .docs-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 3rem 2rem;
  }

  .docs-header {
    text-align: center;
    margin-bottom: 3rem;
  }

  .docs-title {
    font-size: 3rem;
    font-weight: 700;
    color: white;
    margin-bottom: 0.5rem;
  }

  .docs-subtitle {
    font-size: 1.25rem;
    color: #94a3b8;
  }

  .docs-grid {
    display: grid;
    gap: 1.5rem;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
  }

  .doc-card {
    background: rgba(255, 255, 255, 0.05);
    border-radius: 1rem;
    padding: 2rem;
    text-decoration: none;
    color: inherit;
    border: 1px solid rgba(255, 255, 255, 0.1);
    transition: all 0.3s ease;
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    gap: 1rem;
    position: relative;
    overflow: hidden;
  }

  .doc-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, rgba(59, 130, 246, 0.1), transparent);
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .doc-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 12px 24px rgba(0, 0, 0, 0.3);
    border-color: rgba(59, 130, 246, 0.5);
  }

  .doc-card:hover::before {
    opacity: 1;
  }

  .card-content {
    flex: 1;
    position: relative;
    z-index: 1;
  }

  .card-title {
    font-size: 1.5rem;
    font-weight: 600;
    color: white;
    margin-bottom: 0.75rem;
    line-height: 1.3;
  }

  .card-description {
    color: #cbd5e1;
    margin-bottom: 1rem;
    line-height: 1.6;
  }

  .card-meta {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
    margin-bottom: 0.75rem;
  }

  .meta-badge {
    font-size: 0.875rem;
    color: #94a3b8;
  }

  .card-tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  .tag {
    background: rgba(59, 130, 246, 0.2);
    color: #93c5fd;
    padding: 0.25rem 0.75rem;
    border-radius: 1rem;
    font-size: 0.8125rem;
    border: 1px solid rgba(59, 130, 246, 0.3);
  }

  .card-arrow {
    font-size: 1.5rem;
    color: #60a5fa;
    opacity: 0;
    transform: translateX(-10px);
    transition: all 0.3s ease;
    position: relative;
    z-index: 1;
  }

  .doc-card:hover .card-arrow {
    opacity: 1;
    transform: translateX(0);
  }

  .empty-state {
    text-align: center;
    padding: 4rem 2rem;
    color: #94a3b8;
  }

  .empty-state p {
    margin-bottom: 0.5rem;
    font-size: 1.125rem;
  }

  .empty-hint {
    font-size: 0.9375rem;
  }

  @media (max-width: 768px) {
    .docs-title {
      font-size: 2rem;
    }

    .docs-grid {
      grid-template-columns: 1fr;
    }

    .doc-card {
      padding: 1.5rem;
    }
  }
</style>

